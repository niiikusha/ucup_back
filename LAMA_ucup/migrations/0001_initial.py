# Generated by Django 4.2.7 on 2024-02-20 06:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('name', models.CharField(blank=True, null=True)),
                ('id', models.CharField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Article',
            },
        ),
        migrations.CreateModel(
            name='Assortment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(blank=True, db_column='Product_Id', null=True)),
                ('vendor_id', models.CharField(blank=True, db_column='Vendor_Id', null=True)),
                ('entity_id', models.CharField(blank=True, db_column='Entity_Id', null=True)),
            ],
            options={
                'db_table': 'Assortment',
            },
        ),
        migrations.CreateModel(
            name='Brandclassifier',
            fields=[
                ('classifierid', models.CharField(db_column='ClassifierID', primary_key=True, serialize=False)),
                ('brand_name', models.CharField(db_column='Brand_name')),
                ('producer_name', models.CharField(db_column='Producer_name')),
            ],
            options={
                'db_table': 'BrandClassifier',
            },
        ),
        migrations.CreateModel(
            name='Classifier',
            fields=[
                ('classifierid', models.CharField(db_column='ClassifierID', primary_key=True, serialize=False)),
                ('l1', models.CharField(db_column='L1')),
                ('l1_name', models.CharField(db_column='L1_name')),
                ('l2', models.CharField(db_column='L2')),
                ('l2_name', models.CharField(db_column='L2_name')),
                ('l3', models.CharField(db_column='L3')),
                ('l3_name', models.CharField(db_column='L3_name')),
                ('l4', models.CharField(db_column='L4')),
                ('l4_name', models.CharField(db_column='L4_name')),
            ],
            options={
                'db_table': 'Classifier',
            },
        ),
        migrations.CreateModel(
            name='ClassifierTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classifier_code', models.CharField(max_length=12, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('parent_code', models.CharField(max_length=12)),
            ],
            options={
                'db_table': 'app_classifier',
            },
        ),
        migrations.CreateModel(
            name='Entities',
            fields=[
                ('entity_id', models.CharField(db_column='Entity_id', max_length=4, primary_key=True, serialize=False)),
                ('directorname', models.CharField(blank=True, db_column='DirectorName', max_length=100, null=True)),
                ('urasticname', models.CharField(db_column='UrasticName', max_length=100)),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('urasticaddress', models.CharField(blank=True, db_column='UrasticAddress', max_length=250, null=True)),
                ('inn_kpp', models.CharField(blank=True, db_column='INN\\KPP', max_length=121, null=True)),
                ('bankname', models.CharField(db_column='BankName', max_length=100)),
                ('account', models.CharField(db_column='Account', max_length=35)),
                ('corraccount', models.CharField(db_column='CorrAccount', max_length=35)),
                ('bankbink', models.CharField(db_column='BankBink', max_length=15)),
                ('mergeid', models.CharField(blank=True, db_column='MergeID', max_length=4, null=True)),
            ],
            options={
                'db_table': 'Entities',
            },
        ),
        migrations.CreateModel(
            name='IncludedProducts',
            fields=[
                ('ku_id', models.CharField(blank=True, db_column='KU_id', null=True)),
                ('item_type', models.CharField(blank=True, db_column='Item_type', null=True)),
                ('item_code', models.CharField(blank=True, db_column='Item_code', null=True)),
                ('item_name', models.CharField(blank=True, db_column='Item_name', null=True)),
                ('in_prod_id', models.BigAutoField(db_column='In_prod_Id', primary_key=True, serialize=False)),
                ('brand', models.CharField(blank=True, db_column='Brand', null=True)),
                ('producer', models.CharField(blank=True, db_column='Producer', null=True)),
            ],
            options={
                'db_table': 'Included_products',
            },
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('invoice_id', models.BigIntegerField(db_column='Invoice_id', primary_key=True, serialize=False)),
                ('vendor_id', models.CharField(db_column='Vendor_id', max_length=20)),
                ('doc_id', models.CharField(db_column='Doc_id', max_length=70)),
                ('entity_id', models.CharField(db_column='Entity_id', max_length=4)),
                ('invoice_name', models.CharField(db_column='Invoice_name', max_length=100)),
                ('invoice_number', models.CharField(db_column='Invoice_number', max_length=100)),
                ('date', models.DateField(db_column='Date')),
                ('purch_number', models.CharField(db_column='Purch_number', max_length=100)),
                ('purch_date', models.DateField(db_column='Purch_date')),
                ('doc_type', models.IntegerField(db_column='Doc_type')),
                ('invoices_status', models.IntegerField(db_column='Invoices_status')),
                ('on_off', models.TextField(blank=True, db_column='On_off', null=True)),
                ('base', models.TextField(blank=True, db_column='Base', null=True)),
                ('exclude_return', models.TextField(blank=True, db_column='Exclude_return', null=True)),
                ('ofactured', models.TextField(blank=True, db_column='Ofactured', null=True)),
                ('ku_type', models.CharField(blank=True, db_column='KU_type', max_length=50, null=True)),
                ('pay_type', models.CharField(blank=True, db_column='Pay_type', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='Ku',
            fields=[
                ('ku_id', models.CharField(db_column='Ku_id', editable=False, primary_key=True, serialize=False)),
                ('period', models.CharField(db_column='Period', max_length=10)),
                ('date_start', models.DateField(db_column='Date_start')),
                ('date_end', models.DateField(blank=True, db_column='Date_end', null=True)),
                ('status', models.CharField(db_column='Status', max_length=20)),
                ('date_actual', models.DateField(blank=True, db_column='Date_actual', null=True)),
                ('base', models.FloatField(blank=True, db_column='Base', null=True)),
                ('percent', models.IntegerField(blank=True, db_column='Percent', null=True)),
                ('graph_exists', models.BooleanField(blank=True, db_column='graph_Exists', null=True)),
                ('entity_id', models.ForeignKey(db_column='Entity_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.entities')),
            ],
            options={
                'db_table': 'KU',
            },
        ),
        migrations.CreateModel(
            name='Venddoclines',
            fields=[
                ('recid', models.BigIntegerField(db_column='RecId', primary_key=True, serialize=False)),
                ('docid', models.CharField(blank=True, db_column='DocID', null=True)),
                ('product_id', models.CharField(db_column='Product_id')),
                ('qty', models.FloatField(db_column='QTY')),
                ('amount', models.FloatField(db_column='Amount')),
                ('amountvat', models.FloatField(db_column='AmountVAT')),
                ('vat', models.FloatField(db_column='VAT')),
            ],
            options={
                'db_table': 'VendDocLines',
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendor_id', models.CharField(db_column='Vendor_id', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=100, null=True)),
                ('urasticname', models.CharField(blank=True, db_column='UrasticName', max_length=100, null=True)),
                ('inn_kpp', models.CharField(blank=True, db_column='INN/KPP', max_length=121, null=True)),
                ('directorname', models.CharField(blank=True, db_column='DirectorName', max_length=100, null=True)),
                ('urasticadress', models.CharField(blank=True, db_column='UrasticAdress', max_length=250, null=True)),
                ('account', models.CharField(blank=True, db_column='Account', max_length=35, null=True)),
                ('bankname', models.CharField(blank=True, db_column='BankName', max_length=100, null=True)),
                ('bankbik', models.CharField(blank=True, db_column='BankBik', max_length=15, null=True)),
                ('corraccount', models.CharField(blank=True, db_column='CorrAccount', max_length=35, null=True)),
                ('dirparty', models.BigIntegerField(blank=True, db_column='DirParty', null=True)),
                ('entity_id', models.ForeignKey(blank=True, db_column='Entity_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.entities')),
            ],
            options={
                'db_table': 'Vendors',
            },
        ),
        migrations.CreateModel(
            name='Venddoc',
            fields=[
                ('docid', models.CharField(blank=True, db_column='DocID', null=True)),
                ('doctype', models.CharField(db_column='DocType')),
                ('invoice_name', models.CharField(db_column='Invoice_name')),
                ('invoice_number', models.CharField(db_column='Invoice_number')),
                ('invoice_date', models.DateField(db_column='Invoice_date')),
                ('purch_number', models.CharField(db_column='Purch_number')),
                ('purch_date', models.DateField(db_column='Purch_date')),
                ('invoicestatus', models.CharField(blank=True, db_column='InvoiceStatus', null=True)),
                ('invoice_id', models.BigAutoField(db_column='Invoice_id', primary_key=True, serialize=False)),
                ('products_amount', models.FloatField(blank=True, db_column='Products_amount', null=True)),
                ('entity_id', models.ForeignKey(db_column='Entity_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.entities')),
                ('vendor_id', models.ForeignKey(db_column='Vendor_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.vendors')),
            ],
            options={
                'db_table': 'VendDoc',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('itemid', models.CharField(db_column='itemId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', null=True)),
                ('brand', models.ForeignKey(blank=True, db_column='Brand_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.brandclassifier')),
                ('classifier', models.ForeignKey(blank=True, db_column='Classifier_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.classifier')),
            ],
            options={
                'db_table': 'Products',
            },
        ),
        migrations.CreateModel(
            name='KuGraph',
            fields=[
                ('graph_id', models.AutoField(db_column='Graph_id', primary_key=True, serialize=False)),
                ('period', models.CharField(db_column='Period', max_length=10)),
                ('date_start', models.DateField(db_column='Date_start')),
                ('date_end', models.DateField(db_column='Date_end')),
                ('date_calc', models.DateField(db_column='Date_calc')),
                ('status', models.CharField(db_column='Status', max_length=20)),
                ('sum_calc', models.FloatField(blank=True, db_column='Sum_calc', null=True)),
                ('sum_bonus', models.FloatField(blank=True, db_column='Sum_bonus', null=True)),
                ('percent', models.IntegerField(blank=True, db_column='Percent', null=True)),
                ('ku_id', models.ForeignKey(db_column='Ku_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.ku')),
                ('vendor_id', models.ForeignKey(db_column='Vendor_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.vendors')),
            ],
            options={
                'db_table': 'KU_graph',
            },
        ),
        migrations.AddField(
            model_name='ku',
            name='vendor_id',
            field=models.ForeignKey(db_column='Vendor_id', on_delete=django.db.models.deletion.DO_NOTHING, to='LAMA_ucup.vendors'),
        ),
       
    ]
